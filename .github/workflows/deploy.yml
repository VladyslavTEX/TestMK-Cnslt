name: Deploy Website

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: "us-east-1"
  TF_VERSION: "1.3.7"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Generate SSH Key
      id: ssh-key
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -q -N ""
        echo "PUBLIC_SSH_KEY=$(cat ~/.ssh/id_rsa.pub)" >> $GITHUB_ENV

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform-version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
        -var="aws_region=${{ env.AWS_REGION }}" \
        -var="bucket_name=my-website-${{ github.run_id }}" \
        -var="ssh_public_key=${{ env.PUBLIC_SSH_KEY }}"
        -var="environment_suffix=${{ github.run_id }}"
      working-directory: ./terraform

    - name: Get Website URL
      id: website-url
      run: |
        echo "url=$(terraform output -raw website_url)" >> $GITHUB_OUTPUT
      working-directory: ./terraform

    - name: Install Ansible
      run: |
        sudo apt update
        sudo apt install -y ansible

    - name: Configure inventory
      run: |
        echo "[webservers]" > inventory.ini
        echo "$(terraform output -raw public_dns) ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini
      working-directory: ./terraform

    - name: Run Ansible playbook
      run: |
        ansible-playbook -i inventory.ini ansible/deploy.yml \
        --ssh-common-args='-o StrictHostKeyChecking=no'
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"

    - name: Show Website URL
      run: |
        echo "Website deployed at: ${{ steps.website-url.outputs.url }}"
