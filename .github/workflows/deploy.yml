name: Deploy Website

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: "us-east-1"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v3

    - name: Generate SSH Key
      id: ssh-key
      run: |
        mkdir -p ~/.ssh
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -q -N ""
        echo "PUBLIC_SSH_KEY=$(cat ~/.ssh/id_rsa.pub)" >> $GITHUB_ENV

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve -var="ssh_public_key=${{ env.PUBLIC_SSH_KEY }}"
      working-directory: ./terraform

    - name: Install Ansible
      run: |
        sudo apt update
        sudo apt install -y ansible

    - name: Configure inventory
      run: |
        echo "[webservers]" > inventory.ini
        echo "${{ env.DNS }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini

    - name: Run Ansible playbook
      run: ansible-playbook -i inventory.ini ansible/deploy.yml --ssh-common-args='-o StrictHostKeyChecking=no'

    - name: Show Website URL
      run: |
        echo "Website deployed at: http://${{ env.DNS }}"
